// Generated by ffigen 0.2.0
// Platform: Linux
// Target: 64-bit
glClearIndex(c float) void #Foreign("glClearIndex")
glClearColor(red float, green float, blue float, alpha float) void #Foreign("glClearColor")
glClear(mask uint) void #Foreign("glClear")
glIndexMask(mask uint) void #Foreign("glIndexMask")
glColorMask(red byte, green byte, blue byte, alpha byte) void #Foreign("glColorMask")
glAlphaFunc(func uint, ref float) void #Foreign("glAlphaFunc")
glBlendFunc(sfactor uint, dfactor uint) void #Foreign("glBlendFunc")
glLogicOp(opcode uint) void #Foreign("glLogicOp")
glCullFace(mode uint) void #Foreign("glCullFace")
glFrontFace(mode uint) void #Foreign("glFrontFace")
glPointSize(size float) void #Foreign("glPointSize")
glLineWidth(width float) void #Foreign("glLineWidth")
glLineStipple(factor int, pattern ushort) void #Foreign("glLineStipple")
glPolygonMode(face uint, mode uint) void #Foreign("glPolygonMode")
glPolygonOffset(factor float, units float) void #Foreign("glPolygonOffset")
glPolygonStipple(mask *byte) void #Foreign("glPolygonStipple")
glGetPolygonStipple(mask *byte) void #Foreign("glGetPolygonStipple")
glEdgeFlag(flag byte) void #Foreign("glEdgeFlag")
glEdgeFlagv(flag *byte) void #Foreign("glEdgeFlagv")
glScissor(x int, y int, width int, height int) void #Foreign("glScissor")
glClipPlane(plane uint, equation *double) void #Foreign("glClipPlane")
glGetClipPlane(plane uint, equation *double) void #Foreign("glGetClipPlane")
glDrawBuffer(mode uint) void #Foreign("glDrawBuffer")
glReadBuffer(mode uint) void #Foreign("glReadBuffer")
glEnable(cap uint) void #Foreign("glEnable")
glDisable(cap uint) void #Foreign("glDisable")
glIsEnabled(cap uint) byte #Foreign("glIsEnabled")
glEnableClientState(cap uint) void #Foreign("glEnableClientState")
glDisableClientState(cap uint) void #Foreign("glDisableClientState")
glGetBooleanv(pname uint, params *byte) void #Foreign("glGetBooleanv")
glGetDoublev(pname uint, params *double) void #Foreign("glGetDoublev")
glGetFloatv(pname uint, params *float) void #Foreign("glGetFloatv")
glGetIntegerv(pname uint, params *int) void #Foreign("glGetIntegerv")
glPushAttrib(mask uint) void #Foreign("glPushAttrib")
glPopAttrib() void #Foreign("glPopAttrib")
glPushClientAttrib(mask uint) void #Foreign("glPushClientAttrib")
glPopClientAttrib() void #Foreign("glPopClientAttrib")
glRenderMode(mode uint) int #Foreign("glRenderMode")
glGetError() uint #Foreign("glGetError")
glGetString(name uint) *byte #Foreign("glGetString")
glFinish() void #Foreign("glFinish")
glFlush() void #Foreign("glFlush")
glHint(target uint, mode uint) void #Foreign("glHint")
glClearDepth(depth double) void #Foreign("glClearDepth")
glDepthFunc(func uint) void #Foreign("glDepthFunc")
glDepthMask(flag byte) void #Foreign("glDepthMask")
glDepthRange(near_val double, far_val double) void #Foreign("glDepthRange")
glClearAccum(red float, green float, blue float, alpha float) void #Foreign("glClearAccum")
glAccum(op uint, value float) void #Foreign("glAccum")
glMatrixMode(mode uint) void #Foreign("glMatrixMode")
glOrtho(left double, right double, bottom double, top double, near_val double, far_val double) void #Foreign("glOrtho")
glFrustum(left double, right double, bottom double, top double, near_val double, far_val double) void #Foreign("glFrustum")
glViewport(x int, y int, width int, height int) void #Foreign("glViewport")
glPushMatrix() void #Foreign("glPushMatrix")
glPopMatrix() void #Foreign("glPopMatrix")
glLoadIdentity() void #Foreign("glLoadIdentity")
glLoadMatrixd(m *double) void #Foreign("glLoadMatrixd")
glLoadMatrixf(m *float) void #Foreign("glLoadMatrixf")
glMultMatrixd(m *double) void #Foreign("glMultMatrixd")
glMultMatrixf(m *float) void #Foreign("glMultMatrixf")
glRotated(angle double, x double, y double, z double) void #Foreign("glRotated")
glRotatef(angle float, x float, y float, z float) void #Foreign("glRotatef")
glScaled(x double, y double, z double) void #Foreign("glScaled")
glScalef(x float, y float, z float) void #Foreign("glScalef")
glTranslated(x double, y double, z double) void #Foreign("glTranslated")
glTranslatef(x float, y float, z float) void #Foreign("glTranslatef")
glIsList(list uint) byte #Foreign("glIsList")
glDeleteLists(list uint, range int) void #Foreign("glDeleteLists")
glGenLists(range int) uint #Foreign("glGenLists")
glNewList(list uint, mode uint) void #Foreign("glNewList")
glEndList() void #Foreign("glEndList")
glCallList(list uint) void #Foreign("glCallList")
glCallLists(n int, type uint, lists pointer) void #Foreign("glCallLists")
glListBase(base uint) void #Foreign("glListBase")
glBegin(mode uint) void #Foreign("glBegin")
glEnd() void #Foreign("glEnd")
glVertex2d(x double, y double) void #Foreign("glVertex2d")
glVertex2f(x float, y float) void #Foreign("glVertex2f")
glVertex2i(x int, y int) void #Foreign("glVertex2i")
glVertex2s(x short, y short) void #Foreign("glVertex2s")
glVertex3d(x double, y double, z double) void #Foreign("glVertex3d")
glVertex3f(x float, y float, z float) void #Foreign("glVertex3f")
glVertex3i(x int, y int, z int) void #Foreign("glVertex3i")
glVertex3s(x short, y short, z short) void #Foreign("glVertex3s")
glVertex4d(x double, y double, z double, w double) void #Foreign("glVertex4d")
glVertex4f(x float, y float, z float, w float) void #Foreign("glVertex4f")
glVertex4i(x int, y int, z int, w int) void #Foreign("glVertex4i")
glVertex4s(x short, y short, z short, w short) void #Foreign("glVertex4s")
glVertex2dv(v *double) void #Foreign("glVertex2dv")
glVertex2fv(v *float) void #Foreign("glVertex2fv")
glVertex2iv(v *int) void #Foreign("glVertex2iv")
glVertex2sv(v *short) void #Foreign("glVertex2sv")
glVertex3dv(v *double) void #Foreign("glVertex3dv")
glVertex3fv(v *float) void #Foreign("glVertex3fv")
glVertex3iv(v *int) void #Foreign("glVertex3iv")
glVertex3sv(v *short) void #Foreign("glVertex3sv")
glVertex4dv(v *double) void #Foreign("glVertex4dv")
glVertex4fv(v *float) void #Foreign("glVertex4fv")
glVertex4iv(v *int) void #Foreign("glVertex4iv")
glVertex4sv(v *short) void #Foreign("glVertex4sv")
glNormal3b(nx sbyte, ny sbyte, nz sbyte) void #Foreign("glNormal3b")
glNormal3d(nx double, ny double, nz double) void #Foreign("glNormal3d")
glNormal3f(nx float, ny float, nz float) void #Foreign("glNormal3f")
glNormal3i(nx int, ny int, nz int) void #Foreign("glNormal3i")
glNormal3s(nx short, ny short, nz short) void #Foreign("glNormal3s")
glNormal3bv(v *sbyte) void #Foreign("glNormal3bv")
glNormal3dv(v *double) void #Foreign("glNormal3dv")
glNormal3fv(v *float) void #Foreign("glNormal3fv")
glNormal3iv(v *int) void #Foreign("glNormal3iv")
glNormal3sv(v *short) void #Foreign("glNormal3sv")
glIndexd(c double) void #Foreign("glIndexd")
glIndexf(c float) void #Foreign("glIndexf")
glIndexi(c int) void #Foreign("glIndexi")
glIndexs(c short) void #Foreign("glIndexs")
glIndexub(c byte) void #Foreign("glIndexub")
glIndexdv(c *double) void #Foreign("glIndexdv")
glIndexfv(c *float) void #Foreign("glIndexfv")
glIndexiv(c *int) void #Foreign("glIndexiv")
glIndexsv(c *short) void #Foreign("glIndexsv")
glIndexubv(c *byte) void #Foreign("glIndexubv")
glColor3b(red sbyte, green sbyte, blue sbyte) void #Foreign("glColor3b")
glColor3d(red double, green double, blue double) void #Foreign("glColor3d")
glColor3f(red float, green float, blue float) void #Foreign("glColor3f")
glColor3i(red int, green int, blue int) void #Foreign("glColor3i")
glColor3s(red short, green short, blue short) void #Foreign("glColor3s")
glColor3ub(red byte, green byte, blue byte) void #Foreign("glColor3ub")
glColor3ui(red uint, green uint, blue uint) void #Foreign("glColor3ui")
glColor3us(red ushort, green ushort, blue ushort) void #Foreign("glColor3us")
glColor4b(red sbyte, green sbyte, blue sbyte, alpha sbyte) void #Foreign("glColor4b")
glColor4d(red double, green double, blue double, alpha double) void #Foreign("glColor4d")
glColor4f(red float, green float, blue float, alpha float) void #Foreign("glColor4f")
glColor4i(red int, green int, blue int, alpha int) void #Foreign("glColor4i")
glColor4s(red short, green short, blue short, alpha short) void #Foreign("glColor4s")
glColor4ub(red byte, green byte, blue byte, alpha byte) void #Foreign("glColor4ub")
glColor4ui(red uint, green uint, blue uint, alpha uint) void #Foreign("glColor4ui")
glColor4us(red ushort, green ushort, blue ushort, alpha ushort) void #Foreign("glColor4us")
glColor3bv(v *sbyte) void #Foreign("glColor3bv")
glColor3dv(v *double) void #Foreign("glColor3dv")
glColor3fv(v *float) void #Foreign("glColor3fv")
glColor3iv(v *int) void #Foreign("glColor3iv")
glColor3sv(v *short) void #Foreign("glColor3sv")
glColor3ubv(v *byte) void #Foreign("glColor3ubv")
glColor3uiv(v *uint) void #Foreign("glColor3uiv")
glColor3usv(v *ushort) void #Foreign("glColor3usv")
glColor4bv(v *sbyte) void #Foreign("glColor4bv")
glColor4dv(v *double) void #Foreign("glColor4dv")
glColor4fv(v *float) void #Foreign("glColor4fv")
glColor4iv(v *int) void #Foreign("glColor4iv")
glColor4sv(v *short) void #Foreign("glColor4sv")
glColor4ubv(v *byte) void #Foreign("glColor4ubv")
glColor4uiv(v *uint) void #Foreign("glColor4uiv")
glColor4usv(v *ushort) void #Foreign("glColor4usv")
glTexCoord1d(s double) void #Foreign("glTexCoord1d")
glTexCoord1f(s float) void #Foreign("glTexCoord1f")
glTexCoord1i(s int) void #Foreign("glTexCoord1i")
glTexCoord1s(s short) void #Foreign("glTexCoord1s")
glTexCoord2d(s double, t double) void #Foreign("glTexCoord2d")
glTexCoord2f(s float, t float) void #Foreign("glTexCoord2f")
glTexCoord2i(s int, t int) void #Foreign("glTexCoord2i")
glTexCoord2s(s short, t short) void #Foreign("glTexCoord2s")
glTexCoord3d(s double, t double, r double) void #Foreign("glTexCoord3d")
glTexCoord3f(s float, t float, r float) void #Foreign("glTexCoord3f")
glTexCoord3i(s int, t int, r int) void #Foreign("glTexCoord3i")
glTexCoord3s(s short, t short, r short) void #Foreign("glTexCoord3s")
glTexCoord4d(s double, t double, r double, q double) void #Foreign("glTexCoord4d")
glTexCoord4f(s float, t float, r float, q float) void #Foreign("glTexCoord4f")
glTexCoord4i(s int, t int, r int, q int) void #Foreign("glTexCoord4i")
glTexCoord4s(s short, t short, r short, q short) void #Foreign("glTexCoord4s")
glTexCoord1dv(v *double) void #Foreign("glTexCoord1dv")
glTexCoord1fv(v *float) void #Foreign("glTexCoord1fv")
glTexCoord1iv(v *int) void #Foreign("glTexCoord1iv")
glTexCoord1sv(v *short) void #Foreign("glTexCoord1sv")
glTexCoord2dv(v *double) void #Foreign("glTexCoord2dv")
glTexCoord2fv(v *float) void #Foreign("glTexCoord2fv")
glTexCoord2iv(v *int) void #Foreign("glTexCoord2iv")
glTexCoord2sv(v *short) void #Foreign("glTexCoord2sv")
glTexCoord3dv(v *double) void #Foreign("glTexCoord3dv")
glTexCoord3fv(v *float) void #Foreign("glTexCoord3fv")
glTexCoord3iv(v *int) void #Foreign("glTexCoord3iv")
glTexCoord3sv(v *short) void #Foreign("glTexCoord3sv")
glTexCoord4dv(v *double) void #Foreign("glTexCoord4dv")
glTexCoord4fv(v *float) void #Foreign("glTexCoord4fv")
glTexCoord4iv(v *int) void #Foreign("glTexCoord4iv")
glTexCoord4sv(v *short) void #Foreign("glTexCoord4sv")
glRasterPos2d(x double, y double) void #Foreign("glRasterPos2d")
glRasterPos2f(x float, y float) void #Foreign("glRasterPos2f")
glRasterPos2i(x int, y int) void #Foreign("glRasterPos2i")
glRasterPos2s(x short, y short) void #Foreign("glRasterPos2s")
glRasterPos3d(x double, y double, z double) void #Foreign("glRasterPos3d")
glRasterPos3f(x float, y float, z float) void #Foreign("glRasterPos3f")
glRasterPos3i(x int, y int, z int) void #Foreign("glRasterPos3i")
glRasterPos3s(x short, y short, z short) void #Foreign("glRasterPos3s")
glRasterPos4d(x double, y double, z double, w double) void #Foreign("glRasterPos4d")
glRasterPos4f(x float, y float, z float, w float) void #Foreign("glRasterPos4f")
glRasterPos4i(x int, y int, z int, w int) void #Foreign("glRasterPos4i")
glRasterPos4s(x short, y short, z short, w short) void #Foreign("glRasterPos4s")
glRasterPos2dv(v *double) void #Foreign("glRasterPos2dv")
glRasterPos2fv(v *float) void #Foreign("glRasterPos2fv")
glRasterPos2iv(v *int) void #Foreign("glRasterPos2iv")
glRasterPos2sv(v *short) void #Foreign("glRasterPos2sv")
glRasterPos3dv(v *double) void #Foreign("glRasterPos3dv")
glRasterPos3fv(v *float) void #Foreign("glRasterPos3fv")
glRasterPos3iv(v *int) void #Foreign("glRasterPos3iv")
glRasterPos3sv(v *short) void #Foreign("glRasterPos3sv")
glRasterPos4dv(v *double) void #Foreign("glRasterPos4dv")
glRasterPos4fv(v *float) void #Foreign("glRasterPos4fv")
glRasterPos4iv(v *int) void #Foreign("glRasterPos4iv")
glRasterPos4sv(v *short) void #Foreign("glRasterPos4sv")
glRectd(x1 double, y1 double, x2 double, y2 double) void #Foreign("glRectd")
glRectf(x1 float, y1 float, x2 float, y2 float) void #Foreign("glRectf")
glRecti(x1 int, y1 int, x2 int, y2 int) void #Foreign("glRecti")
glRects(x1 short, y1 short, x2 short, y2 short) void #Foreign("glRects")
glRectdv(v1 *double, v2 *double) void #Foreign("glRectdv")
glRectfv(v1 *float, v2 *float) void #Foreign("glRectfv")
glRectiv(v1 *int, v2 *int) void #Foreign("glRectiv")
glRectsv(v1 *short, v2 *short) void #Foreign("glRectsv")
glVertexPointer(size int, type uint, stride int, ptr pointer) void #Foreign("glVertexPointer")
glNormalPointer(type uint, stride int, ptr pointer) void #Foreign("glNormalPointer")
glColorPointer(size int, type uint, stride int, ptr pointer) void #Foreign("glColorPointer")
glIndexPointer(type uint, stride int, ptr pointer) void #Foreign("glIndexPointer")
glTexCoordPointer(size int, type uint, stride int, ptr pointer) void #Foreign("glTexCoordPointer")
glEdgeFlagPointer(stride int, ptr pointer) void #Foreign("glEdgeFlagPointer")
glGetPointerv(pname uint, params *pointer) void #Foreign("glGetPointerv")
glArrayElement(i int) void #Foreign("glArrayElement")
glDrawArrays(mode uint, first int, count int) void #Foreign("glDrawArrays")
glDrawElements(mode uint, count int, type uint, indices pointer) void #Foreign("glDrawElements")
glInterleavedArrays(format uint, stride int, pointer pointer) void #Foreign("glInterleavedArrays")
glShadeModel(mode uint) void #Foreign("glShadeModel")
glLightf(light uint, pname uint, param float) void #Foreign("glLightf")
glLighti(light uint, pname uint, param int) void #Foreign("glLighti")
glLightfv(light uint, pname uint, params *float) void #Foreign("glLightfv")
glLightiv(light uint, pname uint, params *int) void #Foreign("glLightiv")
glGetLightfv(light uint, pname uint, params *float) void #Foreign("glGetLightfv")
glGetLightiv(light uint, pname uint, params *int) void #Foreign("glGetLightiv")
glLightModelf(pname uint, param float) void #Foreign("glLightModelf")
glLightModeli(pname uint, param int) void #Foreign("glLightModeli")
glLightModelfv(pname uint, params *float) void #Foreign("glLightModelfv")
glLightModeliv(pname uint, params *int) void #Foreign("glLightModeliv")
glMaterialf(face uint, pname uint, param float) void #Foreign("glMaterialf")
glMateriali(face uint, pname uint, param int) void #Foreign("glMateriali")
glMaterialfv(face uint, pname uint, params *float) void #Foreign("glMaterialfv")
glMaterialiv(face uint, pname uint, params *int) void #Foreign("glMaterialiv")
glGetMaterialfv(face uint, pname uint, params *float) void #Foreign("glGetMaterialfv")
glGetMaterialiv(face uint, pname uint, params *int) void #Foreign("glGetMaterialiv")
glColorMaterial(face uint, mode uint) void #Foreign("glColorMaterial")
glPixelZoom(xfactor float, yfactor float) void #Foreign("glPixelZoom")
glPixelStoref(pname uint, param float) void #Foreign("glPixelStoref")
glPixelStorei(pname uint, param int) void #Foreign("glPixelStorei")
glPixelTransferf(pname uint, param float) void #Foreign("glPixelTransferf")
glPixelTransferi(pname uint, param int) void #Foreign("glPixelTransferi")
glPixelMapfv(map uint, mapsize int, values *float) void #Foreign("glPixelMapfv")
glPixelMapuiv(map uint, mapsize int, values *uint) void #Foreign("glPixelMapuiv")
glPixelMapusv(map uint, mapsize int, values *ushort) void #Foreign("glPixelMapusv")
glGetPixelMapfv(map uint, values *float) void #Foreign("glGetPixelMapfv")
glGetPixelMapuiv(map uint, values *uint) void #Foreign("glGetPixelMapuiv")
glGetPixelMapusv(map uint, values *ushort) void #Foreign("glGetPixelMapusv")
glBitmap(width int, height int, xorig float, yorig float, xmove float, ymove float, bitmap *byte) void #Foreign("glBitmap")
glReadPixels(x int, y int, width int, height int, format uint, type uint, pixels pointer) void #Foreign("glReadPixels")
glDrawPixels(width int, height int, format uint, type uint, pixels pointer) void #Foreign("glDrawPixels")
glCopyPixels(x int, y int, width int, height int, type uint) void #Foreign("glCopyPixels")
glStencilFunc(func uint, ref int, mask uint) void #Foreign("glStencilFunc")
glStencilMask(mask uint) void #Foreign("glStencilMask")
glStencilOp(fail uint, zfail uint, zpass uint) void #Foreign("glStencilOp")
glClearStencil(s int) void #Foreign("glClearStencil")
glTexGend(coord uint, pname uint, param double) void #Foreign("glTexGend")
glTexGenf(coord uint, pname uint, param float) void #Foreign("glTexGenf")
glTexGeni(coord uint, pname uint, param int) void #Foreign("glTexGeni")
glTexGendv(coord uint, pname uint, params *double) void #Foreign("glTexGendv")
glTexGenfv(coord uint, pname uint, params *float) void #Foreign("glTexGenfv")
glTexGeniv(coord uint, pname uint, params *int) void #Foreign("glTexGeniv")
glGetTexGendv(coord uint, pname uint, params *double) void #Foreign("glGetTexGendv")
glGetTexGenfv(coord uint, pname uint, params *float) void #Foreign("glGetTexGenfv")
glGetTexGeniv(coord uint, pname uint, params *int) void #Foreign("glGetTexGeniv")
glTexEnvf(target uint, pname uint, param float) void #Foreign("glTexEnvf")
glTexEnvi(target uint, pname uint, param int) void #Foreign("glTexEnvi")
glTexEnvfv(target uint, pname uint, params *float) void #Foreign("glTexEnvfv")
glTexEnviv(target uint, pname uint, params *int) void #Foreign("glTexEnviv")
glGetTexEnvfv(target uint, pname uint, params *float) void #Foreign("glGetTexEnvfv")
glGetTexEnviv(target uint, pname uint, params *int) void #Foreign("glGetTexEnviv")
glTexParameterf(target uint, pname uint, param float) void #Foreign("glTexParameterf")
glTexParameteri(target uint, pname uint, param int) void #Foreign("glTexParameteri")
glTexParameterfv(target uint, pname uint, params *float) void #Foreign("glTexParameterfv")
glTexParameteriv(target uint, pname uint, params *int) void #Foreign("glTexParameteriv")
glGetTexParameterfv(target uint, pname uint, params *float) void #Foreign("glGetTexParameterfv")
glGetTexParameteriv(target uint, pname uint, params *int) void #Foreign("glGetTexParameteriv")
glGetTexLevelParameterfv(target uint, level int, pname uint, params *float) void #Foreign("glGetTexLevelParameterfv")
glGetTexLevelParameteriv(target uint, level int, pname uint, params *int) void #Foreign("glGetTexLevelParameteriv")
glTexImage1D(target uint, level int, internalFormat int, width int, border int, format uint, type uint, pixels pointer) void #Foreign("glTexImage1D")
glTexImage2D(target uint, level int, internalFormat int, width int, height int, border int, format uint, type uint, pixels pointer) void #Foreign("glTexImage2D")
glGetTexImage(target uint, level int, format uint, type uint, pixels pointer) void #Foreign("glGetTexImage")
glGenTextures(n int, textures *uint) void #Foreign("glGenTextures")
glDeleteTextures(n int, textures *uint) void #Foreign("glDeleteTextures")
glBindTexture(target uint, texture uint) void #Foreign("glBindTexture")
glPrioritizeTextures(n int, textures *uint, priorities *float) void #Foreign("glPrioritizeTextures")
glAreTexturesResident(n int, textures *uint, residences *byte) byte #Foreign("glAreTexturesResident")
glIsTexture(texture uint) byte #Foreign("glIsTexture")
glTexSubImage1D(target uint, level int, xoffset int, width int, format uint, type uint, pixels pointer) void #Foreign("glTexSubImage1D")
glTexSubImage2D(target uint, level int, xoffset int, yoffset int, width int, height int, format uint, type uint, pixels pointer) void #Foreign("glTexSubImage2D")
glCopyTexImage1D(target uint, level int, internalformat uint, x int, y int, width int, border int) void #Foreign("glCopyTexImage1D")
glCopyTexImage2D(target uint, level int, internalformat uint, x int, y int, width int, height int, border int) void #Foreign("glCopyTexImage2D")
glCopyTexSubImage1D(target uint, level int, xoffset int, x int, y int, width int) void #Foreign("glCopyTexSubImage1D")
glCopyTexSubImage2D(target uint, level int, xoffset int, yoffset int, x int, y int, width int, height int) void #Foreign("glCopyTexSubImage2D")
glMap1d(target uint, u1 double, u2 double, stride int, order int, points *double) void #Foreign("glMap1d")
glMap1f(target uint, u1 float, u2 float, stride int, order int, points *float) void #Foreign("glMap1f")
glMap2d(target uint, u1 double, u2 double, ustride int, uorder int, v1 double, v2 double, vstride int, vorder int, points *double) void #Foreign("glMap2d")
glMap2f(target uint, u1 float, u2 float, ustride int, uorder int, v1 float, v2 float, vstride int, vorder int, points *float) void #Foreign("glMap2f")
glGetMapdv(target uint, query uint, v *double) void #Foreign("glGetMapdv")
glGetMapfv(target uint, query uint, v *float) void #Foreign("glGetMapfv")
glGetMapiv(target uint, query uint, v *int) void #Foreign("glGetMapiv")
glEvalCoord1d(u double) void #Foreign("glEvalCoord1d")
glEvalCoord1f(u float) void #Foreign("glEvalCoord1f")
glEvalCoord1dv(u *double) void #Foreign("glEvalCoord1dv")
glEvalCoord1fv(u *float) void #Foreign("glEvalCoord1fv")
glEvalCoord2d(u double, v double) void #Foreign("glEvalCoord2d")
glEvalCoord2f(u float, v float) void #Foreign("glEvalCoord2f")
glEvalCoord2dv(u *double) void #Foreign("glEvalCoord2dv")
glEvalCoord2fv(u *float) void #Foreign("glEvalCoord2fv")
glMapGrid1d(un int, u1 double, u2 double) void #Foreign("glMapGrid1d")
glMapGrid1f(un int, u1 float, u2 float) void #Foreign("glMapGrid1f")
glMapGrid2d(un int, u1 double, u2 double, vn int, v1 double, v2 double) void #Foreign("glMapGrid2d")
glMapGrid2f(un int, u1 float, u2 float, vn int, v1 float, v2 float) void #Foreign("glMapGrid2f")
glEvalPoint1(i int) void #Foreign("glEvalPoint1")
glEvalPoint2(i int, j int) void #Foreign("glEvalPoint2")
glEvalMesh1(mode uint, i1 int, i2 int) void #Foreign("glEvalMesh1")
glEvalMesh2(mode uint, i1 int, i2 int, j1 int, j2 int) void #Foreign("glEvalMesh2")
glFogf(pname uint, param float) void #Foreign("glFogf")
glFogi(pname uint, param int) void #Foreign("glFogi")
glFogfv(pname uint, params *float) void #Foreign("glFogfv")
glFogiv(pname uint, params *int) void #Foreign("glFogiv")
glFeedbackBuffer(size int, type uint, buffer *float) void #Foreign("glFeedbackBuffer")
glPassThrough(token float) void #Foreign("glPassThrough")
glSelectBuffer(size int, buffer *uint) void #Foreign("glSelectBuffer")
glInitNames() void #Foreign("glInitNames")
glLoadName(name uint) void #Foreign("glLoadName")
glPushName(name uint) void #Foreign("glPushName")
glPopName() void #Foreign("glPopName")
glDrawRangeElements(mode uint, start uint, end uint, count int, type uint, indices pointer) void #Foreign("glDrawRangeElements")
glTexImage3D(target uint, level int, internalFormat int, width int, height int, depth int, border int, format uint, type uint, pixels pointer) void #Foreign("glTexImage3D")
glTexSubImage3D(target uint, level int, xoffset int, yoffset int, zoffset int, width int, height int, depth int, format uint, type uint, pixels pointer) void #Foreign("glTexSubImage3D")
glCopyTexSubImage3D(target uint, level int, xoffset int, yoffset int, zoffset int, x int, y int, width int, height int) void #Foreign("glCopyTexSubImage3D")
glColorTable(target uint, internalformat uint, width int, format uint, type uint, table pointer) void #Foreign("glColorTable")
glColorSubTable(target uint, start int, count int, format uint, type uint, data pointer) void #Foreign("glColorSubTable")
glColorTableParameteriv(target uint, pname uint, params *int) void #Foreign("glColorTableParameteriv")
glColorTableParameterfv(target uint, pname uint, params *float) void #Foreign("glColorTableParameterfv")
glCopyColorSubTable(target uint, start int, x int, y int, width int) void #Foreign("glCopyColorSubTable")
glCopyColorTable(target uint, internalformat uint, x int, y int, width int) void #Foreign("glCopyColorTable")
glGetColorTable(target uint, format uint, type uint, table pointer) void #Foreign("glGetColorTable")
glGetColorTableParameterfv(target uint, pname uint, params *float) void #Foreign("glGetColorTableParameterfv")
glGetColorTableParameteriv(target uint, pname uint, params *int) void #Foreign("glGetColorTableParameteriv")
glBlendEquation(mode uint) void #Foreign("glBlendEquation")
glBlendColor(red float, green float, blue float, alpha float) void #Foreign("glBlendColor")
glHistogram(target uint, width int, internalformat uint, sink byte) void #Foreign("glHistogram")
glResetHistogram(target uint) void #Foreign("glResetHistogram")
glGetHistogram(target uint, reset byte, format uint, type uint, values pointer) void #Foreign("glGetHistogram")
glGetHistogramParameterfv(target uint, pname uint, params *float) void #Foreign("glGetHistogramParameterfv")
glGetHistogramParameteriv(target uint, pname uint, params *int) void #Foreign("glGetHistogramParameteriv")
glMinmax(target uint, internalformat uint, sink byte) void #Foreign("glMinmax")
glResetMinmax(target uint) void #Foreign("glResetMinmax")
glGetMinmax(target uint, reset byte, format uint, types uint, values pointer) void #Foreign("glGetMinmax")
glGetMinmaxParameterfv(target uint, pname uint, params *float) void #Foreign("glGetMinmaxParameterfv")
glGetMinmaxParameteriv(target uint, pname uint, params *int) void #Foreign("glGetMinmaxParameteriv")
glConvolutionFilter1D(target uint, internalformat uint, width int, format uint, type uint, image pointer) void #Foreign("glConvolutionFilter1D")
glConvolutionFilter2D(target uint, internalformat uint, width int, height int, format uint, type uint, image pointer) void #Foreign("glConvolutionFilter2D")
glConvolutionParameterf(target uint, pname uint, params float) void #Foreign("glConvolutionParameterf")
glConvolutionParameterfv(target uint, pname uint, params *float) void #Foreign("glConvolutionParameterfv")
glConvolutionParameteri(target uint, pname uint, params int) void #Foreign("glConvolutionParameteri")
glConvolutionParameteriv(target uint, pname uint, params *int) void #Foreign("glConvolutionParameteriv")
glCopyConvolutionFilter1D(target uint, internalformat uint, x int, y int, width int) void #Foreign("glCopyConvolutionFilter1D")
glCopyConvolutionFilter2D(target uint, internalformat uint, x int, y int, width int, height int) void #Foreign("glCopyConvolutionFilter2D")
glGetConvolutionFilter(target uint, format uint, type uint, image pointer) void #Foreign("glGetConvolutionFilter")
glGetConvolutionParameterfv(target uint, pname uint, params *float) void #Foreign("glGetConvolutionParameterfv")
glGetConvolutionParameteriv(target uint, pname uint, params *int) void #Foreign("glGetConvolutionParameteriv")
glSeparableFilter2D(target uint, internalformat uint, width int, height int, format uint, type uint, row pointer, column pointer) void #Foreign("glSeparableFilter2D")
glGetSeparableFilter(target uint, format uint, type uint, row pointer, column pointer, span pointer) void #Foreign("glGetSeparableFilter")
glActiveTexture(texture uint) void #Foreign("glActiveTexture")
glClientActiveTexture(texture uint) void #Foreign("glClientActiveTexture")
glCompressedTexImage1D(target uint, level int, internalformat uint, width int, border int, imageSize int, data pointer) void #Foreign("glCompressedTexImage1D")
glCompressedTexImage2D(target uint, level int, internalformat uint, width int, height int, border int, imageSize int, data pointer) void #Foreign("glCompressedTexImage2D")
glCompressedTexImage3D(target uint, level int, internalformat uint, width int, height int, depth int, border int, imageSize int, data pointer) void #Foreign("glCompressedTexImage3D")
glCompressedTexSubImage1D(target uint, level int, xoffset int, width int, format uint, imageSize int, data pointer) void #Foreign("glCompressedTexSubImage1D")
glCompressedTexSubImage2D(target uint, level int, xoffset int, yoffset int, width int, height int, format uint, imageSize int, data pointer) void #Foreign("glCompressedTexSubImage2D")
glCompressedTexSubImage3D(target uint, level int, xoffset int, yoffset int, zoffset int, width int, height int, depth int, format uint, imageSize int, data pointer) void #Foreign("glCompressedTexSubImage3D")
glGetCompressedTexImage(target uint, lod int, img pointer) void #Foreign("glGetCompressedTexImage")
glMultiTexCoord1d(target uint, s double) void #Foreign("glMultiTexCoord1d")
glMultiTexCoord1dv(target uint, v *double) void #Foreign("glMultiTexCoord1dv")
glMultiTexCoord1f(target uint, s float) void #Foreign("glMultiTexCoord1f")
glMultiTexCoord1fv(target uint, v *float) void #Foreign("glMultiTexCoord1fv")
glMultiTexCoord1i(target uint, s int) void #Foreign("glMultiTexCoord1i")
glMultiTexCoord1iv(target uint, v *int) void #Foreign("glMultiTexCoord1iv")
glMultiTexCoord1s(target uint, s short) void #Foreign("glMultiTexCoord1s")
glMultiTexCoord1sv(target uint, v *short) void #Foreign("glMultiTexCoord1sv")
glMultiTexCoord2d(target uint, s double, t double) void #Foreign("glMultiTexCoord2d")
glMultiTexCoord2dv(target uint, v *double) void #Foreign("glMultiTexCoord2dv")
glMultiTexCoord2f(target uint, s float, t float) void #Foreign("glMultiTexCoord2f")
glMultiTexCoord2fv(target uint, v *float) void #Foreign("glMultiTexCoord2fv")
glMultiTexCoord2i(target uint, s int, t int) void #Foreign("glMultiTexCoord2i")
glMultiTexCoord2iv(target uint, v *int) void #Foreign("glMultiTexCoord2iv")
glMultiTexCoord2s(target uint, s short, t short) void #Foreign("glMultiTexCoord2s")
glMultiTexCoord2sv(target uint, v *short) void #Foreign("glMultiTexCoord2sv")
glMultiTexCoord3d(target uint, s double, t double, r double) void #Foreign("glMultiTexCoord3d")
glMultiTexCoord3dv(target uint, v *double) void #Foreign("glMultiTexCoord3dv")
glMultiTexCoord3f(target uint, s float, t float, r float) void #Foreign("glMultiTexCoord3f")
glMultiTexCoord3fv(target uint, v *float) void #Foreign("glMultiTexCoord3fv")
glMultiTexCoord3i(target uint, s int, t int, r int) void #Foreign("glMultiTexCoord3i")
glMultiTexCoord3iv(target uint, v *int) void #Foreign("glMultiTexCoord3iv")
glMultiTexCoord3s(target uint, s short, t short, r short) void #Foreign("glMultiTexCoord3s")
glMultiTexCoord3sv(target uint, v *short) void #Foreign("glMultiTexCoord3sv")
glMultiTexCoord4d(target uint, s double, t double, r double, q double) void #Foreign("glMultiTexCoord4d")
glMultiTexCoord4dv(target uint, v *double) void #Foreign("glMultiTexCoord4dv")
glMultiTexCoord4f(target uint, s float, t float, r float, q float) void #Foreign("glMultiTexCoord4f")
glMultiTexCoord4fv(target uint, v *float) void #Foreign("glMultiTexCoord4fv")
glMultiTexCoord4i(target uint, s int, t int, r int, q int) void #Foreign("glMultiTexCoord4i")
glMultiTexCoord4iv(target uint, v *int) void #Foreign("glMultiTexCoord4iv")
glMultiTexCoord4s(target uint, s short, t short, r short, q short) void #Foreign("glMultiTexCoord4s")
glMultiTexCoord4sv(target uint, v *short) void #Foreign("glMultiTexCoord4sv")
glLoadTransposeMatrixd(m *double) void #Foreign("glLoadTransposeMatrixd")
glLoadTransposeMatrixf(m *float) void #Foreign("glLoadTransposeMatrixf")
glMultTransposeMatrixd(m *double) void #Foreign("glMultTransposeMatrixd")
glMultTransposeMatrixf(m *float) void #Foreign("glMultTransposeMatrixf")
glSampleCoverage(value float, invert byte) void #Foreign("glSampleCoverage")
glActiveTextureARB(texture uint) void #Foreign("glActiveTextureARB")
glClientActiveTextureARB(texture uint) void #Foreign("glClientActiveTextureARB")
glMultiTexCoord1dARB(target uint, s double) void #Foreign("glMultiTexCoord1dARB")
glMultiTexCoord1dvARB(target uint, v *double) void #Foreign("glMultiTexCoord1dvARB")
glMultiTexCoord1fARB(target uint, s float) void #Foreign("glMultiTexCoord1fARB")
glMultiTexCoord1fvARB(target uint, v *float) void #Foreign("glMultiTexCoord1fvARB")
glMultiTexCoord1iARB(target uint, s int) void #Foreign("glMultiTexCoord1iARB")
glMultiTexCoord1ivARB(target uint, v *int) void #Foreign("glMultiTexCoord1ivARB")
glMultiTexCoord1sARB(target uint, s short) void #Foreign("glMultiTexCoord1sARB")
glMultiTexCoord1svARB(target uint, v *short) void #Foreign("glMultiTexCoord1svARB")
glMultiTexCoord2dARB(target uint, s double, t double) void #Foreign("glMultiTexCoord2dARB")
glMultiTexCoord2dvARB(target uint, v *double) void #Foreign("glMultiTexCoord2dvARB")
glMultiTexCoord2fARB(target uint, s float, t float) void #Foreign("glMultiTexCoord2fARB")
glMultiTexCoord2fvARB(target uint, v *float) void #Foreign("glMultiTexCoord2fvARB")
glMultiTexCoord2iARB(target uint, s int, t int) void #Foreign("glMultiTexCoord2iARB")
glMultiTexCoord2ivARB(target uint, v *int) void #Foreign("glMultiTexCoord2ivARB")
glMultiTexCoord2sARB(target uint, s short, t short) void #Foreign("glMultiTexCoord2sARB")
glMultiTexCoord2svARB(target uint, v *short) void #Foreign("glMultiTexCoord2svARB")
glMultiTexCoord3dARB(target uint, s double, t double, r double) void #Foreign("glMultiTexCoord3dARB")
glMultiTexCoord3dvARB(target uint, v *double) void #Foreign("glMultiTexCoord3dvARB")
glMultiTexCoord3fARB(target uint, s float, t float, r float) void #Foreign("glMultiTexCoord3fARB")
glMultiTexCoord3fvARB(target uint, v *float) void #Foreign("glMultiTexCoord3fvARB")
glMultiTexCoord3iARB(target uint, s int, t int, r int) void #Foreign("glMultiTexCoord3iARB")
glMultiTexCoord3ivARB(target uint, v *int) void #Foreign("glMultiTexCoord3ivARB")
glMultiTexCoord3sARB(target uint, s short, t short, r short) void #Foreign("glMultiTexCoord3sARB")
glMultiTexCoord3svARB(target uint, v *short) void #Foreign("glMultiTexCoord3svARB")
glMultiTexCoord4dARB(target uint, s double, t double, r double, q double) void #Foreign("glMultiTexCoord4dARB")
glMultiTexCoord4dvARB(target uint, v *double) void #Foreign("glMultiTexCoord4dvARB")
glMultiTexCoord4fARB(target uint, s float, t float, r float, q float) void #Foreign("glMultiTexCoord4fARB")
glMultiTexCoord4fvARB(target uint, v *float) void #Foreign("glMultiTexCoord4fvARB")
glMultiTexCoord4iARB(target uint, s int, t int, r int, q int) void #Foreign("glMultiTexCoord4iARB")
glMultiTexCoord4ivARB(target uint, v *int) void #Foreign("glMultiTexCoord4ivARB")
glMultiTexCoord4sARB(target uint, s short, t short, r short, q short) void #Foreign("glMultiTexCoord4sARB")
glMultiTexCoord4svARB(target uint, v *short) void #Foreign("glMultiTexCoord4svARB")
glBlendEquationSeparateATI(modeRGB uint, modeA uint) void #Foreign("glBlendEquationSeparateATI")
XExtData struct {
	number int
	next *XExtData
	free_private pointer
	private_data *sbyte
}
Visual struct {
	ext_data *XExtData
	visualid ulong
	class int
	red_mask ulong
	green_mask ulong
	blue_mask ulong
	bits_per_rgb int
	map_entries int
}
XVisualInfo struct {
	visual *Visual
	visualid ulong
	screen int
	depth int
	class int
	red_mask ulong
	green_mask ulong
	blue_mask ulong
	colormap_size int
	bits_per_rgb int
}
glXChooseVisual(dpy pointer #As("Display *"), screen int, attribList *int) *XVisualInfo #As("XVisualInfo *") #Foreign("glXChooseVisual")
glXCreateContext(dpy pointer #As("Display *"), vis *XVisualInfo #As("XVisualInfo *"), shareList pointer #As("GLXContext"), direct int) pointer #As("GLXContext") #Foreign("glXCreateContext")
glXDestroyContext(dpy pointer #As("Display *"), ctx pointer #As("GLXContext")) void #Foreign("glXDestroyContext")
glXMakeCurrent(dpy pointer #As("Display *"), drawable ulong, ctx pointer #As("GLXContext")) int #Foreign("glXMakeCurrent")
glXCopyContext(dpy pointer #As("Display *"), src pointer #As("GLXContext"), dst pointer #As("GLXContext"), mask ulong) void #Foreign("glXCopyContext")
glXSwapBuffers(dpy pointer #As("Display *"), drawable ulong) void #Foreign("glXSwapBuffers")
glXCreateGLXPixmap(dpy pointer #As("Display *"), visual *XVisualInfo #As("XVisualInfo *"), pixmap ulong) ulong #Foreign("glXCreateGLXPixmap")
glXDestroyGLXPixmap(dpy pointer #As("Display *"), pixmap ulong) void #Foreign("glXDestroyGLXPixmap")
glXQueryExtension(dpy pointer #As("Display *"), errorb *int, event *int) int #Foreign("glXQueryExtension")
glXQueryVersion(dpy pointer #As("Display *"), maj *int, min *int) int #Foreign("glXQueryVersion")
glXIsDirect(dpy pointer #As("Display *"), ctx pointer #As("GLXContext")) int #Foreign("glXIsDirect")
glXGetConfig(dpy pointer #As("Display *"), visual *XVisualInfo #As("XVisualInfo *"), attrib int, value *int) int #Foreign("glXGetConfig")
glXGetCurrentContext() pointer #As("GLXContext") #Foreign("glXGetCurrentContext")
glXGetCurrentDrawable() ulong #Foreign("glXGetCurrentDrawable")
glXWaitGL() void #Foreign("glXWaitGL")
glXWaitX() void #Foreign("glXWaitX")
glXUseXFont(font ulong, first int, count int, list int) void #Foreign("glXUseXFont")
glXQueryExtensionsString(dpy pointer #As("Display *"), screen int) *sbyte #Foreign("glXQueryExtensionsString")
glXQueryServerString(dpy pointer #As("Display *"), screen int, name int) *sbyte #Foreign("glXQueryServerString")
glXGetClientString(dpy pointer #As("Display *"), name int) *sbyte #Foreign("glXGetClientString")
glXGetCurrentDisplay() pointer #As("Display *") #Foreign("glXGetCurrentDisplay")
glXChooseFBConfig(dpy pointer #As("Display *"), screen int, attribList *int, nitems *int) *pointer #As("GLXFBConfig *") #Foreign("glXChooseFBConfig")
glXGetFBConfigAttrib(dpy pointer #As("Display *"), config pointer #As("GLXFBConfig"), attribute int, value *int) int #Foreign("glXGetFBConfigAttrib")
glXGetFBConfigs(dpy pointer #As("Display *"), screen int, nelements *int) *pointer #As("GLXFBConfig *") #Foreign("glXGetFBConfigs")
glXGetVisualFromFBConfig(dpy pointer #As("Display *"), config pointer #As("GLXFBConfig")) *XVisualInfo #As("XVisualInfo *") #Foreign("glXGetVisualFromFBConfig")
glXCreateWindow(dpy pointer #As("Display *"), config pointer #As("GLXFBConfig"), win ulong, attribList *int) ulong #Foreign("glXCreateWindow")
glXDestroyWindow(dpy pointer #As("Display *"), window ulong) void #Foreign("glXDestroyWindow")
glXCreatePixmap(dpy pointer #As("Display *"), config pointer #As("GLXFBConfig"), pixmap ulong, attribList *int) ulong #Foreign("glXCreatePixmap")
glXDestroyPixmap(dpy pointer #As("Display *"), pixmap ulong) void #Foreign("glXDestroyPixmap")
glXCreatePbuffer(dpy pointer #As("Display *"), config pointer #As("GLXFBConfig"), attribList *int) ulong #Foreign("glXCreatePbuffer")
glXDestroyPbuffer(dpy pointer #As("Display *"), pbuf ulong) void #Foreign("glXDestroyPbuffer")
glXQueryDrawable(dpy pointer #As("Display *"), draw ulong, attribute int, value *uint) void #Foreign("glXQueryDrawable")
glXCreateNewContext(dpy pointer #As("Display *"), config pointer #As("GLXFBConfig"), renderType int, shareList pointer #As("GLXContext"), direct int) pointer #As("GLXContext") #Foreign("glXCreateNewContext")
glXMakeContextCurrent(dpy pointer #As("Display *"), draw ulong, read ulong, ctx pointer #As("GLXContext")) int #Foreign("glXMakeContextCurrent")
glXGetCurrentReadDrawable() ulong #Foreign("glXGetCurrentReadDrawable")
glXQueryContext(dpy pointer #As("Display *"), ctx pointer #As("GLXContext"), attribute int, value *int) int #Foreign("glXQueryContext")
glXSelectEvent(dpy pointer #As("Display *"), drawable ulong, mask ulong) void #Foreign("glXSelectEvent")
glXGetSelectedEvent(dpy pointer #As("Display *"), drawable ulong, mask *ulong) void #Foreign("glXGetSelectedEvent")
glXGetProcAddressARB(p0 *byte) pointer #As("__GLXextFuncPtr") #Foreign("glXGetProcAddressARB")
glXGetProcAddress(procname *byte) pointer #As("void (*)(void)") #Foreign("glXGetProcAddress")
glXAllocateMemoryNV(size int, readfreq float, writefreq float, priority float) pointer #Foreign("glXAllocateMemoryNV")
glXFreeMemoryNV(pointer pointer) void #Foreign("glXFreeMemoryNV")
glXBindTexImageARB(dpy pointer #As("Display *"), pbuffer ulong, buffer int) int #Foreign("glXBindTexImageARB")
glXReleaseTexImageARB(dpy pointer #As("Display *"), pbuffer ulong, buffer int) int #Foreign("glXReleaseTexImageARB")
glXDrawableAttribARB(dpy pointer #As("Display *"), draw ulong, attribList *int) int #Foreign("glXDrawableAttribARB")
glXGetFrameUsageMESA(dpy pointer #As("Display *"), drawable ulong, usage *float) int #Foreign("glXGetFrameUsageMESA")
glXBeginFrameTrackingMESA(dpy pointer #As("Display *"), drawable ulong) int #Foreign("glXBeginFrameTrackingMESA")
glXEndFrameTrackingMESA(dpy pointer #As("Display *"), drawable ulong) int #Foreign("glXEndFrameTrackingMESA")
glXQueryFrameTrackingMESA(dpy pointer #As("Display *"), drawable ulong, swapCount *long, missedFrames *long, lastMissedUsage *float) int #Foreign("glXQueryFrameTrackingMESA")
gluBeginCurve(nurb pointer #As("GLUnurbs *")) void #Foreign("gluBeginCurve")
gluBeginPolygon(tess pointer #As("GLUtesselator *")) void #Foreign("gluBeginPolygon")
gluBeginSurface(nurb pointer #As("GLUnurbs *")) void #Foreign("gluBeginSurface")
gluBeginTrim(nurb pointer #As("GLUnurbs *")) void #Foreign("gluBeginTrim")
gluBuild1DMipmapLevels(target uint, internalFormat int, width int, format uint, type uint, level int, base int, max int, data pointer) int #Foreign("gluBuild1DMipmapLevels")
gluBuild1DMipmaps(target uint, internalFormat int, width int, format uint, type uint, data pointer) int #Foreign("gluBuild1DMipmaps")
gluBuild2DMipmapLevels(target uint, internalFormat int, width int, height int, format uint, type uint, level int, base int, max int, data pointer) int #Foreign("gluBuild2DMipmapLevels")
gluBuild2DMipmaps(target uint, internalFormat int, width int, height int, format uint, type uint, data pointer) int #Foreign("gluBuild2DMipmaps")
gluBuild3DMipmapLevels(target uint, internalFormat int, width int, height int, depth int, format uint, type uint, level int, base int, max int, data pointer) int #Foreign("gluBuild3DMipmapLevels")
gluBuild3DMipmaps(target uint, internalFormat int, width int, height int, depth int, format uint, type uint, data pointer) int #Foreign("gluBuild3DMipmaps")
gluCheckExtension(extName *byte, extString *byte) byte #Foreign("gluCheckExtension")
gluCylinder(quad pointer #As("GLUquadric *"), base double, top double, height double, slices int, stacks int) void #Foreign("gluCylinder")
gluDeleteNurbsRenderer(nurb pointer #As("GLUnurbs *")) void #Foreign("gluDeleteNurbsRenderer")
gluDeleteQuadric(quad pointer #As("GLUquadric *")) void #Foreign("gluDeleteQuadric")
gluDeleteTess(tess pointer #As("GLUtesselator *")) void #Foreign("gluDeleteTess")
gluDisk(quad pointer #As("GLUquadric *"), inner double, outer double, slices int, loops int) void #Foreign("gluDisk")
gluEndCurve(nurb pointer #As("GLUnurbs *")) void #Foreign("gluEndCurve")
gluEndPolygon(tess pointer #As("GLUtesselator *")) void #Foreign("gluEndPolygon")
gluEndSurface(nurb pointer #As("GLUnurbs *")) void #Foreign("gluEndSurface")
gluEndTrim(nurb pointer #As("GLUnurbs *")) void #Foreign("gluEndTrim")
gluErrorString(error uint) *byte #Foreign("gluErrorString")
gluGetNurbsProperty(nurb pointer #As("GLUnurbs *"), property uint, data *float) void #Foreign("gluGetNurbsProperty")
gluGetString(name uint) *byte #Foreign("gluGetString")
gluGetTessProperty(tess pointer #As("GLUtesselator *"), which uint, data *double) void #Foreign("gluGetTessProperty")
gluLoadSamplingMatrices(nurb pointer #As("GLUnurbs *"), model *float, perspective *float, view *int) void #Foreign("gluLoadSamplingMatrices")
gluLookAt(eyeX double, eyeY double, eyeZ double, centerX double, centerY double, centerZ double, upX double, upY double, upZ double) void #Foreign("gluLookAt")
gluNewNurbsRenderer() pointer #As("GLUnurbs *") #Foreign("gluNewNurbsRenderer")
gluNewQuadric() pointer #As("GLUquadric *") #Foreign("gluNewQuadric")
gluNewTess() pointer #As("GLUtesselator *") #Foreign("gluNewTess")
gluNextContour(tess pointer #As("GLUtesselator *"), type uint) void #Foreign("gluNextContour")
gluNurbsCallback(nurb pointer #As("GLUnurbs *"), which uint, CallBackFunc pointer #As("_GLUfuncptr")) void #Foreign("gluNurbsCallback")
gluNurbsCallbackData(nurb pointer #As("GLUnurbs *"), userData pointer) void #Foreign("gluNurbsCallbackData")
gluNurbsCallbackDataEXT(nurb pointer #As("GLUnurbs *"), userData pointer) void #Foreign("gluNurbsCallbackDataEXT")
gluNurbsCurve(nurb pointer #As("GLUnurbs *"), knotCount int, knots *float, stride int, control *float, order int, type uint) void #Foreign("gluNurbsCurve")
gluNurbsProperty(nurb pointer #As("GLUnurbs *"), property uint, value float) void #Foreign("gluNurbsProperty")
gluNurbsSurface(nurb pointer #As("GLUnurbs *"), sKnotCount int, sKnots *float, tKnotCount int, tKnots *float, sStride int, tStride int, control *float, sOrder int, tOrder int, type uint) void #Foreign("gluNurbsSurface")
gluOrtho2D(left double, right double, bottom double, top double) void #Foreign("gluOrtho2D")
gluPartialDisk(quad pointer #As("GLUquadric *"), inner double, outer double, slices int, loops int, start double, sweep double) void #Foreign("gluPartialDisk")
gluPerspective(fovy double, aspect double, zNear double, zFar double) void #Foreign("gluPerspective")
gluPickMatrix(x double, y double, delX double, delY double, viewport *int) void #Foreign("gluPickMatrix")
gluProject(objX double, objY double, objZ double, model *double, proj *double, view *int, winX *double, winY *double, winZ *double) int #Foreign("gluProject")
gluPwlCurve(nurb pointer #As("GLUnurbs *"), count int, data *float, stride int, type uint) void #Foreign("gluPwlCurve")
gluQuadricCallback(quad pointer #As("GLUquadric *"), which uint, CallBackFunc pointer #As("_GLUfuncptr")) void #Foreign("gluQuadricCallback")
gluQuadricDrawStyle(quad pointer #As("GLUquadric *"), draw uint) void #Foreign("gluQuadricDrawStyle")
gluQuadricNormals(quad pointer #As("GLUquadric *"), normal uint) void #Foreign("gluQuadricNormals")
gluQuadricOrientation(quad pointer #As("GLUquadric *"), orientation uint) void #Foreign("gluQuadricOrientation")
gluQuadricTexture(quad pointer #As("GLUquadric *"), texture byte) void #Foreign("gluQuadricTexture")
gluScaleImage(format uint, wIn int, hIn int, typeIn uint, dataIn pointer, wOut int, hOut int, typeOut uint, dataOut pointer) int #Foreign("gluScaleImage")
gluSphere(quad pointer #As("GLUquadric *"), radius double, slices int, stacks int) void #Foreign("gluSphere")
gluTessBeginContour(tess pointer #As("GLUtesselator *")) void #Foreign("gluTessBeginContour")
gluTessBeginPolygon(tess pointer #As("GLUtesselator *"), data pointer) void #Foreign("gluTessBeginPolygon")
gluTessCallback(tess pointer #As("GLUtesselator *"), which uint, CallBackFunc pointer #As("_GLUfuncptr")) void #Foreign("gluTessCallback")
gluTessEndContour(tess pointer #As("GLUtesselator *")) void #Foreign("gluTessEndContour")
gluTessEndPolygon(tess pointer #As("GLUtesselator *")) void #Foreign("gluTessEndPolygon")
gluTessNormal(tess pointer #As("GLUtesselator *"), valueX double, valueY double, valueZ double) void #Foreign("gluTessNormal")
gluTessProperty(tess pointer #As("GLUtesselator *"), which uint, data double) void #Foreign("gluTessProperty")
gluTessVertex(tess pointer #As("GLUtesselator *"), location *double, data pointer) void #Foreign("gluTessVertex")
gluUnProject(winX double, winY double, winZ double, model *double, proj *double, view *int, objX *double, objY *double, objZ *double) int #Foreign("gluUnProject")
gluUnProject4(winX double, winY double, winZ double, clipW double, model *double, proj *double, view *int, nearVal double, farVal double, objX *double, objY *double, objZ *double, objW *double) int #Foreign("gluUnProject4")
